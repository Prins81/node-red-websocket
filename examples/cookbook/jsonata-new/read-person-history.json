[{"id":"da8c6be92958cdb4","type":"group","z":"776c027950fc8c3f","name":"Process history data using JSONata in a change node","style":{"label":true,"color":"#000000"},"nodes":["f341c4d4cb42bb0c","c652f131ad8b0704","da875f7255be77cf","ff78d21f0df9809e","73661c92f4ee2194","42d382c8d5bc0a74","fb4bf87dfcfdb8bf"],"x":14,"y":4259,"w":1312,"h":122},{"id":"f341c4d4cb42bb0c","type":"api-current-state","z":"776c027950fc8c3f","g":"da8c6be92958cdb4","name":"Get current state","server":"","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"person.george","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"payload ~> |$|{\"entityId\": $entity().entity_id}|","valueType":"jsonata"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":330,"y":4300,"wires":[["da875f7255be77cf"]]},{"id":"c652f131ad8b0704","type":"inject","z":"776c027950fc8c3f","g":"da8c6be92958cdb4","name":"Set parameters","props":[{"p":"payload"},{"p":"startAt","v":"$fromMillis($millis()-(7*24*60*60000))","vt":"jsonata"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"relativeTime\": \"1 week\"\t}","payloadType":"jsonata","x":140,"y":4300,"wires":[["f341c4d4cb42bb0c"]]},{"id":"da875f7255be77cf","type":"api-get-history","z":"776c027950fc8c3f","g":"da8c6be92958cdb4","name":"Read history","server":"","version":1,"startDate":"","endDate":"","entityId":"","entityIdType":"equals","useRelativeTime":true,"relativeTime":"","flatten":true,"outputType":"array","outputLocationType":"msg","outputLocation":"payload","x":510,"y":4300,"wires":[["ff78d21f0df9809e"]]},{"id":"ff78d21f0df9809e","type":"change","z":"776c027950fc8c3f","g":"da8c6be92958cdb4","name":"Get filtered state periods","rules":[{"t":"set","p":"payload","pt":"msg","to":"(\t/* FILTER parameters */\t    $fMins:=50;\t\t/* get current state from entity 'data', and set the 'last_changed' to now */\t    $first:= data~>|$|{\"last_changed\": $now()}|;\t\t/* add this to far end of history payload array, then sort by reverse time order */\t    $x:=$append(payload, $first)^(>last_changed,>last_updated);\t\t/* copy the oldest state value, and add in as the first record at start of history */\t/* we now have a 'now' and 'start of history' record, even if payload was empty    */    \t    $x:=$append($x,{\"state\": $x[0].state, \"last_changed\": startAt});\t\t/* create array of state changes, with how long they have been in that state */\t/* remove any zero periods and unknown states FILTER OUT AS REQUIRED         */\t    $events:=$x#$i.(\t        $prior:= $i>0 ? $x[$i-1] : {\"first\": $now()};\t        {\"index\": $i,\t         \"state\": state,\t         \"from\": last_changed,\t         \"upto\": $prior.last_changed,\t         \"dmins\": ($toMillis($prior.last_changed)-$toMillis(last_changed))/60000~>$round(0)\t        }\t    )[dmins>$fMins and state!=\"unknown\"];\t\t/* merge consecutive records with the same state into one longer period */\t/* get each event position as 'start - middle - end' or 'only'          */\t\t    $temp:=$events#$v.(\t        $back:= $v<1 ? false : state = $events[$v-1].state;\t        $next:= state = $events[$v+1].state;\t        $position:=( $back ? ($next ? \"middle\" : \"end\") : ($next ? \"start\" : \"only\") );\t        $~>|$|{\"index\": $v, \"position\": $position}|\t    );\t\t/* get start and end indexes, and zip into a sequence array of [start, end]  */\t/* map this array of sequences to an array of objects, one for each sequence */\t/* where the object is the combination of a run of the same state value      */\t\t    $chain:=$zip($temp[position=\"start\"].index, $temp[position=\"end\"].index);\t\t    $array:=$map($chain, function($item) {(\t        $recA:=$events[$item[0]];\t        $recB:=$events[$item[1]];\t        {\"state\": $recA.state,\t        \"from\": $recB.from,\t        \"upto\":  $recA.upto,\t        \"dmins\": ($toMillis($recA.upto)-$toMillis($recB.from))/60000~>$round(0),\t        \"position\": \"merged\"}\t        )\t    });\t\t/* combine the 'only' single events with the now-merged sequences, and sort by time */\t    $append($temp[position=\"only\"], $array)^(>from);\t\t)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":730,"y":4300,"wires":[["73661c92f4ee2194","42d382c8d5bc0a74"]]},{"id":"73661c92f4ee2194","type":"debug","z":"776c027950fc8c3f","g":"da8c6be92958cdb4","name":"State History Events","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1180,"y":4300,"wires":[]},{"id":"42d382c8d5bc0a74","type":"change","z":"776c027950fc8c3f","g":"da8c6be92958cdb4","name":"When 'not home' during the day","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload[state=\"not_home\" and ($substringBefore(from,\"T\") = $substringBefore(upto,\"T\"))]","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":910,"y":4340,"wires":[["fb4bf87dfcfdb8bf"]]},{"id":"fb4bf87dfcfdb8bf","type":"debug","z":"776c027950fc8c3f","g":"da8c6be92958cdb4","name":"Out during the day","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1170,"y":4340,"wires":[]}]